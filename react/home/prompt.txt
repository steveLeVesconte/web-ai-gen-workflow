# Role
You are a professional UI/UX designer and React developer tasked with adding new pages and components to an existing Full Stack Developer Portfolio React web application

# Home Page Design
- Hero Image
  -- Spans viewport width
  -- Height: 60vh
  -- Object-fit: cover
  -- Placeholder: src="https://picsum.photos/3200/600" alt="Hero Image"
- Main Content Area 
   -- max-width: 1280px  
   -- margin: 0 auto
   -- padding: 0 32px 
   -- Main Content Aria Contains:
     --- Page Title (developer name and 'Portfolio')
     --- Intro Paragraph
     --- Project Card List with 4 Project Cards
        ---- Contains Project Cards
        ---- Grid Layout:
            ----- bottom-margin: 48px
            ----- row-gap: 48px
            ----- 1 column

## Project Card
- background-color: #ffffff
- Responsive breakpoint: 1024px
- Box shadow: 0 4px 6px rgba(0, 0, 0, 0.1)
- Border radius: 8px
- Overflow: hidden

### Desktop Project Card Layout:
- Grid layout:
  -- Columns: 3
  -- Column gap: 32px
- Image spans 2 columns
- Text Section 
     -- spans 1 column
     -- padding: --spacing-md
     -- contains:
        --- Project Title
        --- paragraph
        --- Button Link: "Learn More"
  - Alternate image placement (left/right)

### Mobile Project Card Layout:
- Grid layout:
  - Columns: 1
- Image above Text Section

# Data Design
export interface Project {
  id: string;
  title: string;
  listPageDescription: string;   // used on List Page
  homePageDescription: string;   // used on Home Page
  listPageImageUrl: string;      // used on List Page
  homePageImageUrl: string;      // used on Home Page
  isFeatured: boolean; // is featured on the Home Page
  projectDate: Date; // the date the project was completed
  isHidden: boolean; // is hidden from both the project List Page and the Home Page
  featureOrder?: number; // the order in which the project appears on the Home Page
}

# Constraints
When crafting components and pages, follow best practices for
 - file naming 
 - variable naming
 - function naming
 - placement in folders
 - responsive design

Prefer function components instead of class components.
Use TypeScript.
If more components are needed to complete the HomePage.tsx, create them.
Use best and latest practices and conventions when designing the paths for the routes.
Assume that the included 'styles.css' will be the main style source.  If more styles are needed then deliver supplemental stylesheets or a component.css file.
Assume that the files you create will be used in an existing Vite React website.

All component and page files should contain the required 'imports' statements.  Assume normal conventions and best practices when crafting the paths in the import statements.

#AI Task
  Using the attached DesignSystemDocument.md and styles.css, create the start of a react application with an Home Page that is compatible with the attached DesignSystemDocument.md and styles.css.  Assume that styles.css will be included in the React application.

If more css styles are required do one of these two options (you decide):
  -- create a supplemental css file
     OR
  -- include them in a component.css file

## Deliverables

At least the following pages and components:

  -- ProjectDataService.ts
  -- ProjectCardList.tsx
  -- ProjectCardList.css (optional)
  -- ProjectCard.tsx
  -- ProjectCard.css (optional)
  -- HomePage.tsx
  -- HomePage.css (optional)

